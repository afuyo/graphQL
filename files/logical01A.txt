match(n:Poc1LogiskModel) detach delete n;


//###############POC1 Create Logical Model#####################################
MATCH 
(o:POC1Type)
where o._name = "packagedElement"
and o.type <> "uml:Enumeration" and exists(o.name)
and o.id starts with "_fbb"
with o.name as ObjectName, o.id as EAID
merge (n:Poc1LogiskModel:POC1Type {ModelNavn: "LogModel 1", Namn: ObjectName, EAID: EAID })
return count(ObjectName);


//#########POC1 Step2 create properties in logical model #########################
MATCH 
(e:POC1Type)<-[r:IS_CHILD_OF]-(o:XmlTag)
where o._name = "ownedAttribute" and exists(e.name) 
and o.type <> "uml:Enumeration" and exists(o.name)
and not exists(o.association)
and o.id starts with "_fbb"
with o.name as attribute, e.id as EAID_O, o.id as EAID, o.type as type
merge (n:Poc1LogiskModel:LogicalProperty {ModelNavn: "LogModel 1", Namn: attribute, EAID: EAID, EAID_O:EAID_O, type_id:type });


match (e:LogicalProperty)
match (o:XmlTag)
where (e.type_id=o.id)
with o.name as typeName, o.type as umlType, e.Namn as Namn, e.EAID as EAID, e.EAID_O as EAID_O, e.type_id as type_id
merge (n:Poc1LogiskModel:LogicalProperty {ModelNavn: "LogModel 1", Namn: Namn, EAID:EAID, EAID_O:EAID_O, type_id:type_id, typeName:typeName, umlType:umlType});